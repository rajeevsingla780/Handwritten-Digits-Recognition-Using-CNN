# -*- coding: utf-8 -*-
"""mnist_handwritten_cnn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uKXxd965wYYnUJaj70XVZCtyFIZ4wOim
"""

from tensorflow import keras 
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Conv2D,MaxPooling2D,Dense,Flatten
import numpy as np
import pickle
import matplotlib.pyplot as plt

from keras.datasets.mnist import load_data

(x_train, y_train), (x_test, y_test)=digits=load_data(path="mnist.npz")

x_train.shape

x_train=keras.utils.normalize(x_train,axis=1)
x_test=keras.utils.normalize(x_test,axis=1)

plt.imshow(x_train[0],cmap='gray')

x_train=x_train.reshape(len(x_train),28,28,1)
x_test=x_test.reshape(len(x_test),28,28,1)

model1=Sequential()
model1.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))
model1.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))
model1.add(Flatten())
model1.add(Dense(units=32,activation='relu'))
model1.add(Dense(10,activation='softmax'))

model1.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

model1.fit(x_train,y_train,epochs=3)

pridictions=model1.predict(x_test)

print(np.argmax(pridictions[1]))

plt.imshow(x_test[1])

from tensorflow.keras.models import load_model

model1.save('mnist_model_cnn.h5')

val_loss,val_acc=model1.evaluate(x_test,y_test)
print(val_loss,val_acc)

